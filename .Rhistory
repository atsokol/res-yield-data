df <- "/Users/andrii/Downloads/C37118-30107-VNTSK7-ZU-20240101000000-20240731235959.csv"
file <- "/Users/andrii/Downloads/C37118-30107-VNTSK7-ZU-20240101000000-20240731235959.csv"
library(tidyverse)
df <- read_csv(file)
rm(df)
df <- read_csv(file)
View(df)
df <- read_csv(file, skip=1)
View(df)
df$Status |> unique()
hist(df$Frequency)
dist(df$Frequency)
summary(df$Frequency)
file2 <- "/Users/andrii/Downloads/aFRR_2023-2024_xls/2024_аРВЧ.xlsx"
library(readxl)
df2 <- read_xls(file2, skip=1)
df2 <- read_xlsx(file2, skip=1)
View(df2)
glimpse(df2)
df2 |> mutate(hour = hour(HIST_TIMESTAMP), month = month(HIST_TIMESTAMP))
df2 |>
mutate(hour = hour(HIST_TIMESTAMP), month = month(HIST_TIMESTAMP)) |>
View()
library(httr)
library(jsonlite)
# Define the target URL
url <- "https://www.gpee.com.ua/main/loadCharts"
# Function to download data for a specific date
download_day_data <- function(date, gen = "1") {
# Create the payload. Adjust keys and values as required.
payload <- list(
date = as.character(date),
zona = "1",
gen  = as.character(gen)
)
# Send the POST request
response <- POST(url,
body = payload,
encode = "form")
# Check if the request was successful
if (status_code(response) != 200) {
warning("Failed to retrieve data for ", date)
return(NULL)
}
# Parse the response content assuming it's JSON.
data_raw <- content(response, as = "text", encoding = "UTF-8")
vec <- fromJSON(data_raw, flatten = TRUE)
output <- data.frame(
date = date,
hour = seq(1,24),
actual = vec[1:24],
projected = vec[26:49]
)
return(output)
}
# Function to download data for a set of dates into a list
download_data_list <- function(dates, gen) {
lapply(dates, function(day) {
tryCatch({
download_day_data(day, gen)
}, error = function(e) {
message("Error downloading data for ", day, ": ", e)
return(NULL)
})
}
# Generate a sequence of dates for the desired year
dates <- seq(as.Date("2025-01-01"), as.Date("2025-01-02"), by = "day")
# Loop through the dates and download the data
# gen = "1" is solar and gen = "2" is wind
solar_list <- download_data_list(dates, gen = "1")
data_solar <- do.call(rbind, solar_list)
View(data_solar)
# Generate a sequence of dates for the desired year
dates <- seq(as.Date("2025-08-26"), as.Date("2025-08-27"), by = "day")
wind_list <- download_data_list(dates, gen = "2")
# Generate a sequence of dates for the desired year
dates <- seq(as.Date("2025-08-25"), as.Date("2025-08-26"), by = "day")
wind_list <- download_data_list(dates, gen = "2")
data_wind <- do.call(rbind, wind_list)
View(data_wind)
